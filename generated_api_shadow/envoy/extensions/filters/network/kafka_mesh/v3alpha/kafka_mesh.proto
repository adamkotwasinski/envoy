syntax = "proto3";

package envoy.extensions.filters.network.kafka_mesh.v3alpha;

import "udpa/annotations/migrate.proto";
import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.network.kafka_mesh.v3alpha";
option java_outer_classname = "KafkaMeshProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).work_in_progress = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Kafka Mesh]
// Kafka Mesh :ref:`configuration overview <config_network_filters_kafka_mesh>`.
// [#extension: envoy.filters.network.kafka_mesh]

message KafkaMesh {
  string advertised_host = 1 [(validate.rules).string = {min_len: 1}];

  int32 advertised_port = 2 [(validate.rules).int32 = {gt: 0}];

  repeated KafkaClusterDefinition upstream_clusters = 3;

  repeated ForwardingRule forwarding_rules = 4;
}

message KafkaClusterDefinition {
  string cluster_name = 1 [(validate.rules).string = {min_len: 1}];

  string bootstrap_servers = 2 [(validate.rules).string = {min_len: 1}];

  int32 partition_count = 3 [(validate.rules).int32 = {gt: 0}];

  map<string, string> producer_config = 4;
}

message ForwardingRule {
  string target_cluster = 1;

  oneof trigger {
    // Intended place for future types of forwarding rules.
    string topic_prefix = 2;
  }
}
